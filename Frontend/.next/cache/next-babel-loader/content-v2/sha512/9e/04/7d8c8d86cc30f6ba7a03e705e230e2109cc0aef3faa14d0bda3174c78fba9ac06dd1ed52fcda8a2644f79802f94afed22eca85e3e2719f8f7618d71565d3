{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/startPage/startPage.js\";\nimport React, { useState } from 'react';\nimport styles from './startPage.module.css';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nexport default function StartPage(props) {\n  const {\n    0: id,\n    1: setId\n  } = useState();\n  const {\n    0: name,\n    1: setName\n  } = useState();\n  const {\n    0: model,\n    1: setModel\n  } = useState();\n  const {\n    0: desc,\n    1: setDesc\n  } = useState();\n\n  const handleInitiate = () => {\n    props.setInitiate(true);\n    fetch('https://postmanai.herokuapp.com/createmodel?id=ab1214&name=Text Classifier 1&model=nn&desc=Classifies Twitter Post for Bernie Memes', {\n      headers: {\n        apikey: props.token\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.form,\n      onSubmit: handleInitiate,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          name: \"text\",\n          id: \"exampleText\",\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Name your model!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          name: \"text\",\n          id: \"exampleText\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"select\",\n          id: \"exampleSelect\",\n          onChange: e => console.log(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Regression\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Bayes Net\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Neural Net\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Describe your Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"textarea\",\n          name: \"text\",\n          id: \"exampleText\",\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Let's make a model!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/startPage/startPage.js"],"names":["React","useState","styles","Button","Form","FormGroup","Label","Input","FormText","StartPage","props","id","setId","name","setName","model","setModel","desc","setDesc","handleInitiate","setInitiate","fetch","headers","apikey","token","container","form","e","target","value","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport styles from './startPage.module.css';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nexport default function StartPage(props) {\n    const[id, setId] = useState();\n    const[name, setName] = useState();\n    const[model, setModel] = useState();\n    const[desc, setDesc] = useState();\n\n    const handleInitiate = () => {\n        props.setInitiate(true);\n        fetch('https://postmanai.herokuapp.com/createmodel?id=ab1214&name=Text Classifier 1&model=nn&desc=Classifies Twitter Post for Bernie Memes', {\n            headers: {\n                apikey: props.token\n            }\n        })\n    }\n\n\n    return (\n        <div className={styles.container}>\n            <Form className={styles.form} onSubmit={handleInitiate}>\n                <FormGroup>\n                    <Label>Id</Label><br/>\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={e => setId(e.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Name your model!</Label><br/>\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={e => setName(e.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Model</Label><br/>\n                    <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={e => console.log(e.target.value)}>\n                    <option>Regression</option>\n                    <option>Bayes Net</option>\n                    <option>Neural Net</option>\n                    </Input>                \n                </FormGroup>\n                <FormGroup>\n                    <Label>Describe your Model</Label><br/>\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={e => setDesc(e.target.value)}/>\n                </FormGroup>\n                <Button type=\"submit\">Let's make a model!</Button>\n            </Form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}