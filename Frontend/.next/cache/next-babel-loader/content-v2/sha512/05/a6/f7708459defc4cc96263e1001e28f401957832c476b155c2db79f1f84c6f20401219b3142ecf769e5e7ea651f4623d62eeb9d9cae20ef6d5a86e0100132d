{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/Pooling/pooling.js\";\nimport styles from './pooling.module.css';\nimport React, { useState } from 'react';\nimport { FormGroup, Form, Input } from 'reactstrap';\nexport default function Pooling(props) {\n  const {\n    0: poolSize,\n    1: setPoolSize\n  } = useState(1);\n  const {\n    0: stride,\n    1: setStride\n  } = useState(1); // const onChange = () => {\n  //     let current = props.json.slice();\n  //     current[props.number] = {'type':'pooling',\n  //     'poolSize': poolSize,\n  //     'stride': stride\n  // };\n  //     props.set(current);\n  //     console.log(current, current[0]);\n  // }\n\n  const current = props.json.slice();\n  current[props.number] = {\n    'type': 'pooling',\n    'poolSize': poolSize,\n    'stride': stride\n  };\n  props.set(current);\n\n  const handleSize = e => {\n    const value = parseInt(e.target.value);\n\n    if (value) {\n      if (value > 100) {\n        setPoolSize(10);\n      } else if (value < 1) {\n        setPoolSize(1);\n      } else {\n        setPoolSize(value);\n      }\n    } else {\n      setPoolSize(1);\n    }\n  };\n\n  const handleStride = e => {\n    if (e.target.value > poolSize) {\n      alert('Stride cannot be bigger than poolsize!');\n    } else {\n      setStride(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.layer,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \" form-control-label\",\n          htmlFor: \"example-number-input\",\n          children: \"Pool Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: \"0\",\n          id: \"node-input\",\n          type: \"number\",\n          value: poolSize,\n          onChange: handleSize,\n          max: 10,\n          min: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \" form-control-label\",\n          htmlFor: \"example-number-input\",\n          children: \"Stride Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: \"0\",\n          id: \"node-input\",\n          type: \"number\",\n          value: stride,\n          onChange: handleStride,\n          max: 10,\n          min: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/Pooling/pooling.js"],"names":["styles","React","useState","FormGroup","Form","Input","Pooling","props","poolSize","setPoolSize","stride","setStride","current","json","slice","number","set","handleSize","e","value","parseInt","target","handleStride","alert","container","layer","key"],"mappings":"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","sourcesContent":["import styles from './pooling.module.css';\nimport React, {useState} from 'react';\nimport { FormGroup, Form, Input } from 'reactstrap';\n\nexport default function Pooling(props) {\n    const [poolSize, setPoolSize] = useState(1);\n    const [stride, setStride] = useState(1);\n\n    // const onChange = () => {\n    //     let current = props.json.slice();\n    //     current[props.number] = {'type':'pooling',\n    //     'poolSize': poolSize,\n    //     'stride': stride\n    // };\n    //     props.set(current);\n    //     console.log(current, current[0]);\n    // }\n\n    const current = props.json.slice();\n    current[props.number] = {'type':'pooling',\n        'poolSize': poolSize,\n        'stride': stride\n    };\n        props.set(current);\n\n    const handleSize = (e) => {\n        const value = parseInt(e.target.value);\n        if(value) {\n            if(value> 100) {\n                setPoolSize(10);\n            } else if(value < 1){\n                setPoolSize(1);\n            } else {\n                setPoolSize(value);\n            }\n        } else {\n            setPoolSize(1);\n        }\n    }\n\n    const handleStride = (e) => {\n        if(e.target.value > poolSize) {\n            alert('Stride cannot be bigger than poolsize!')\n        } else {\n\n            setStride(e.target.value);\n        }\n    }\n\n    return (\n        <div key={props.key} className={styles.container}>\n\n            <Form className={styles.layer}>\n                <FormGroup>\n                <label className=\" form-control-label\" htmlFor=\"example-number-input\">\n                    Pool Size\n                </label>\n                <br />\n                <Input\n                    defaultValue=\"0\"\n                    id=\"node-input\"\n                    type=\"number\"\n                    value={poolSize}\n                    onChange={handleSize}\n                    max={10}\n                    min={0}\n\n                ></Input>\n                </FormGroup>\n                <FormGroup>\n                <label className=\" form-control-label\" htmlFor=\"example-number-input\">\n                    Stride Size\n                </label>\n                <br />\n                <Input\n                    defaultValue=\"0\"\n                    id=\"node-input\"\n                    type=\"number\"\n                    value={stride}\n                    onChange={handleStride}\n                    max={10}\n                    min={0}\n\n                ></Input>\n                </FormGroup>\n        </Form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}