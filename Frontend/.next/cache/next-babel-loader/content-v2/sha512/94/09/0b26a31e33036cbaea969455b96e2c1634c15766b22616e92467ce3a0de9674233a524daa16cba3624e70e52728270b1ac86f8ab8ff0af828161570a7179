{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/Tree/layerNodeGroup/layerNodeGroup.js\";\nimport React from 'react';\nimport Node from './Node/node';\nimport styles from './layerNodeGroup.module.css';\nexport default function LayerNodeGroup(props) {\n  var _this = this;\n\n  var handleNodeType = function handleNodeType() {\n    var data = props.layerData;\n\n    switch (data['type']) {\n      case 'dense':\n        return _toConsumableArray(Array(data['node']).keys()).map(function () {\n          return /*#__PURE__*/_jsxDEV(Node, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 66\n          }, _this);\n        });\n\n      case 'convolution':\n        return null;\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"pooling!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 23\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: handleNodeType()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = LayerNodeGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayerNodeGroup\");","map":{"version":3,"sources":["/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/Tree/layerNodeGroup/layerNodeGroup.js"],"names":["React","Node","styles","LayerNodeGroup","props","handleNodeType","data","layerData","Array","keys","map","container"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE1C,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAMC,IAAI,GAAGF,KAAK,CAACG,SAAnB;;AACA,YAAOD,IAAI,CAAC,MAAD,CAAX;AACI,WAAK,OAAL;AACI,eAAO,mBAAIE,KAAK,CAACF,IAAI,CAAC,MAAD,CAAL,CAAL,CAAoBG,IAApB,EAAJ,EAAgCC,GAAhC,CAAoC;AAAA,8BAAM,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA,SAApC,CAAP;;AACJ,WAAK,aAAL;AACI,eAAO,IAAP;;AACJ;AACI,4BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAN;AANR;AAQH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,SAAvB;AAAA,cACKN,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAnBuBF,c","sourcesContent":["import React from 'react';\nimport Node from './Node/node';\nimport styles from './layerNodeGroup.module.css'\n\nexport default function LayerNodeGroup(props) {\n\n    const handleNodeType = () => {\n        const data = props.layerData\n        switch(data['type']) {\n            case 'dense':\n                return [...Array(data['node']).keys()].map(() => <Node />)\n            case 'convolution':\n                return null\n            default:\n                return<p>pooling!</p>\n        }\n    }\n\n    return(\n        <div className={styles.container}>\n            {handleNodeType()}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}