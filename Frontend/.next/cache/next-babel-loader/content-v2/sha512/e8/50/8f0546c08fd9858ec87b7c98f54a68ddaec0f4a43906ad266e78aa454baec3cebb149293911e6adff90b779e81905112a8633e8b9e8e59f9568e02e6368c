{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/main/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { signIn, signOut, useSession } from 'next-auth/client';\nimport { FormGroup, Form, Input, Button } from 'reactstrap';\nimport styles from './main.module.css';\nimport Layer from '../layer/layer.js';\nimport Tree from '../Tree/tree.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\nexport default function Main(props) {\n  _s();\n\n  var _this = this;\n\n  var _useSession = useSession(),\n      _useSession2 = _slicedToArray(_useSession, 2),\n      session = _useSession2[0],\n      loading = _useSession2[1];\n\n  var _useState = useState(0),\n      layer = _useState[0],\n      setLayer = _useState[1];\n\n  var _useState2 = useState([]),\n      finalJSON = _useState2[0],\n      setFinalJSON = _useState2[1];\n\n  var _useState3 = useState(),\n      token = _useState3[0],\n      setToken = _useState3[1];\n\n  var _useState4 = useState(false),\n      initiate = _useState4[0],\n      setInitiate = _useState4[1];\n\n  useEffect(function () {\n    console.log(finalJSON);\n  }, [finalJSON]);\n  useEffect(function () {\n    if (session) {\n      fetch('https://postmanai.herokuapp.com/register', {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(function (rawResp) {\n        return rawResp.json();\n      }).then(function (resp) {\n        return setToken(resp);\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }, [session]);\n\n  function handleRemove() {\n    var current = finalJSON.slice();\n    current.splice(-1, 1);\n    setFinalJSON(current);\n    setLayer(current.length);\n  }\n\n  var handleAdd = function handleAdd() {\n    if (layer < 10) {\n      setLayer(layer + 1);\n      var current = finalJSON;\n      current.push({\n        'type': 'dense',\n        'node': 1,\n        'activation': 'relu'\n      });\n    }\n  };\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n    var value = parseInt(e.target.value);\n\n    if (value) {\n      if (value > 10) {\n        setLayer(10);\n      } else if (value < 0) {\n        setLayer(0);\n      } else {\n        setLayer(value);\n      }\n    } else {\n      setLayer(0);\n    }\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    fetch('/createmodel?id=ab1214&name=Text Classifier 1&model=nn&desc=Classifies Twitter Post for Bernie Memes');\n    console.log(finalJSON);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.user,\n      children: [session.user.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: session.user.image,\n        style: {\n          width: '25px',\n          borderRadius: \"3px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hello! Welcome \", session.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOut,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), initiate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.layerVisualizer,\n        children: finalJSON.map(function (layer, index) {\n          return /*#__PURE__*/_jsxDEV(Layer, {\n            handleRemove: handleRemove,\n            thisLayer: layer,\n            setLayer: setLayer,\n            number: index,\n            json: finalJSON,\n            set: setFinalJSON\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 46\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.layer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAdd,\n          className: styles.button,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            className: styles.buttonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \" form-control-label\",\n          htmlFor: \"example-number-input\",\n          children: [\"Layer Number: \", layer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRemove,\n          className: styles.button,\n          children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMinus,\n            className: styles.buttonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tree,\n        children: /*#__PURE__*/_jsxDEV(Tree, {\n          json: finalJSON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: function onClick(e) {\n            return handleSubmit(e);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setInitiate(true);\n      },\n      children: \"Let's make a model!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"U9tBAAio8iLk4+vp0WXfzL8n4cM=\", false, function () {\n  return [useSession];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/main/main.js"],"names":["React","useEffect","useState","signIn","signOut","useSession","FormGroup","Form","Input","Button","styles","Layer","Tree","FontAwesomeIcon","faMinus","faPlus","Main","props","session","loading","layer","setLayer","finalJSON","setFinalJSON","token","setToken","initiate","setInitiate","console","log","fetch","method","mode","headers","then","rawResp","json","resp","err","handleRemove","current","slice","splice","length","handleAdd","push","handleClick","e","preventDefault","value","parseInt","target","handleSubmit","container","user","image","width","borderRadius","name","layerVisualizer","map","index","button","buttonIcon","tree"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {signIn, signOut, useSession} from 'next-auth/client';\nimport { FormGroup, Form, Input, Button } from 'reactstrap';\nimport styles from './main.module.css';\nimport Layer from '../layer/layer.js';\nimport Tree from '../Tree/tree.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function Main(props) {\n    const [session, loading] = useSession();\n    \n    const [layer, setLayer] = useState(0);\n    const [finalJSON, setFinalJSON] = useState([]);\n    const [token, setToken] = useState();\n    const [initiate, setInitiate] = useState(false);\n\n    useEffect(() => {\n        console.log(finalJSON)\n    },[finalJSON])\n\n    useEffect(() => {\n        if(session) {\n\n            fetch('https://postmanai.herokuapp.com/register', {\n                method:'GET',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n            .then(rawResp => rawResp.json())\n            .then(resp => setToken(resp))\n            .catch(err => console.log(err));\n        }\n    },[session])\n\n    function handleRemove() {\n        let current = finalJSON.slice();\n        current.splice(-1, 1);\n        setFinalJSON(current);\n        setLayer(current.length);\n    }\n\n    const handleAdd = () => {\n        if(layer < 10 ) {\n\n            setLayer(layer + 1);\n            const current = finalJSON;\n            current.push({\n                'type': 'dense',\n                'node' : 1,\n                'activation':'relu'\n            })\n        }\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault(); \n        const value = parseInt(e.target.value);\n        if(value) {\n            if(value> 10) {\n                setLayer(10);\n            } else if(value < 0){\n                setLayer(0);\n            } else {\n                setLayer(value);\n            }\n        } else {\n            setLayer(0);\n        }\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch('/createmodel?id=ab1214&name=Text Classifier 1&model=nn&desc=Classifies Twitter Post for Bernie Memes')\n        console.log(finalJSON)\n    }\n\n    return (\n    <div className={styles.container}>\n        <div className={styles.user}>\n            {session.user.image && <img src={session.user.image} style={{width: '25px', borderRadius: \"3px\"}} />}\n            <p>Hello! Welcome {session.user.name}</p>\n            <button onClick={signOut}>Sign Out</button>\n        </div>\n\n        {\n            initiate?\n        (<div>\n        <div className={styles.layerVisualizer}>\n            {finalJSON.map((layer, index) => <Layer handleRemove={handleRemove} thisLayer={layer} setLayer={setLayer} key={index} number={index} json={finalJSON} set={setFinalJSON}/>)}\n        </div>\n\n        <div className={styles.layer}>\n            <Button onClick={handleAdd} className={styles.button}><FontAwesomeIcon icon={faPlus} className={styles.buttonIcon}/></Button>\n                <label className=\" form-control-label\" htmlFor=\"example-number-input\">\n                    Layer Number: {layer}\n                </label>\n                <br />            \n            <Button onClick={handleRemove} className={styles.button}> <FontAwesomeIcon icon={faMinus} className={styles.buttonIcon}/></Button>\n        </div>\n\n        <div className={styles.tree}>\n            <Tree json={finalJSON}/>\n        </div>\n        <div>\n            <button type='submit' onClick={e => handleSubmit(e)}>Submit</button>\n        </div>\n        </div>) :\n        <button onClick={() => setInitiate(true)}>Let's make a model!</button>\n\n        }\n\n\n    </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}