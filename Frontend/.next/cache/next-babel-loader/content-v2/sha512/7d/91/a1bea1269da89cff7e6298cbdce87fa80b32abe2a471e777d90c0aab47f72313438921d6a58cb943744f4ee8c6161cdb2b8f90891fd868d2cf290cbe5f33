{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/layer/layer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './layer.module.css';\nimport Dense from '../Dense/dense';\nimport Pooling from '../Pooling/pooling';\nimport Convolutional from '../Convolutional/convolutional';\nimport { FormGroup, Form, Input, Button } from 'reactstrap';\nexport default function Layer(props) {\n  _s();\n\n  var _useState = useState(props.thisLayer[0]),\n      layerType = _useState[0],\n      setLayerType = _useState[1];\n\n  function renderSwitch(layerType) {\n    var current = props.json;\n\n    switch (layerType) {\n      case 'MaxPooling':\n        return /*#__PURE__*/_jsxDEV(Pooling, {\n          number: props.number,\n          json: props.json,\n          set: props.set\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n\n      case 'Convolutional':\n        return /*#__PURE__*/_jsxDEV(Convolutional, {\n          number: props.number,\n          json: props.json,\n          set: props.set\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Dense, {\n          number: props.number,\n          json: props.json,\n          set: props.set\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 24\n        }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: styles.layer,\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Layer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"select\",\n          id: \"activationselect\",\n          onChangeCapture: function onChangeCapture(e) {\n            return setLayerType(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"MaxPooling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Convolutional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), renderSwitch(layerType)]\n  }, props.key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Layer, \"XAF6xOc3Z6d6vGC2ZxtEvsDZdsQ=\");\n\n_c = Layer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layer\");","map":{"version":3,"sources":["/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/layer/layer.js"],"names":["React","useState","styles","Dense","Pooling","Convolutional","FormGroup","Form","Input","Button","Layer","props","thisLayer","layerType","setLayerType","renderSwitch","current","json","number","set","container","layer","e","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC,QAAiD,YAAjD;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA,kBACCV,QAAQ,CAACU,KAAK,CAACC,SAAN,CAAgB,CAAhB,CAAD,CADT;AAAA,MAC1BC,SAD0B;AAAA,MACfC,YADe;;AAGjC,WAASC,YAAT,CAAsBF,SAAtB,EAAiC;AAC7B,QAAMG,OAAO,GAAGL,KAAK,CAACM,IAAtB;;AACA,YAAOJ,SAAP;AACI,WAAK,YAAL;AACI,4BAAO,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEF,KAAK,CAACO,MAAvB;AAA+B,UAAA,IAAI,EAAEP,KAAK,CAACM,IAA3C;AAAiD,UAAA,GAAG,EAAEN,KAAK,CAACQ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,eAAL;AACI,4BAAO,QAAC,aAAD;AAAe,UAAA,MAAM,EAAER,KAAK,CAACO,MAA7B;AAAqC,UAAA,IAAI,EAAEP,KAAK,CAACM,IAAjD;AAAuD,UAAA,GAAG,EAAEN,KAAK,CAACQ;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ;AACI,4BAAO,QAAC,KAAD;AAAO,UAAA,MAAM,EAAER,KAAK,CAACO,MAArB;AAA6B,UAAA,IAAI,EAAEP,KAAK,CAACM,IAAzC;AAA+C,UAAA,GAAG,EAAEN,KAAK,CAACQ;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAAP;AANR;AAQH;;AAED,sBACI;AAAqB,IAAA,SAAS,EAAEjB,MAAM,CAACkB,SAAvC;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAElB,MAAM,CAACmB,KAAxB;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eACwB;AAAA;AAAA;AAAA;AAAA,gBADxB,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,QAA1B;AAAmC,UAAA,EAAE,EAAC,kBAAtC;AAAyD,UAAA,eAAe,EAAE,yBAAAC,CAAC;AAAA,mBAAIR,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA,WAA3E;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAWKT,YAAY,CAACF,SAAD,CAXjB;AAAA,KAAUF,KAAK,CAACc,GAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA9BuBf,K;;KAAAA,K","sourcesContent":["import React, {useState} from 'react';\nimport styles from './layer.module.css';\nimport Dense from '../Dense/dense';\nimport Pooling from '../Pooling/pooling';\nimport Convolutional from '../Convolutional/convolutional';\nimport { FormGroup, Form, Input, Button,  } from 'reactstrap';\n\nexport default function Layer(props) {\n    const [layerType, setLayerType] = useState(props.thisLayer[0]);\n\n    function renderSwitch(layerType) {\n        const current = props.json;\n        switch(layerType) {\n            case 'MaxPooling':\n                return <Pooling number={props.number} json={props.json} set={props.set} />\n            case 'Convolutional':\n                return <Convolutional number={props.number} json={props.json} set={props.set} />\n            default:\n                return <Dense number={props.number} json={props.json} set={props.set}/> \n        }\n    }\n\n    return (\n        <div key={props.key} className={styles.container}>\n            <Form className={styles.layer}>\n                <FormGroup>\n                    <label>Layer</label><br/>\n                    <Input type=\"select\" name=\"select\" id=\"activationselect\" onChangeCapture={e => setLayerType(e.target.value)}>\n                    <option>Dense</option>\n                    <option>MaxPooling</option>\n                    <option>Convolutional</option>\n                    </Input>\n                </FormGroup>\n            </Form>\n            {renderSwitch(layerType)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}