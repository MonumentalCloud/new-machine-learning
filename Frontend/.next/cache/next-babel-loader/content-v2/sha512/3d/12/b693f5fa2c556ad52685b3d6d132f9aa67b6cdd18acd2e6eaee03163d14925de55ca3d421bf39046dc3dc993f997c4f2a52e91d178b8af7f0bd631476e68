{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/layer/layer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './layer.module.css';\nimport { FormGroup, Form, Input } from 'reactstrap';\nexport default function Layer(props) {\n  _s();\n\n  var _useState = useState(0),\n      node = _useState[0],\n      setNode = _useState[1];\n\n  var _useState2 = useState('relu'),\n      activation = _useState2[0],\n      setActivation = _useState2[1];\n\n  var handleNode = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              value = parseInt(e.target.value);\n\n              if (value) {\n                if (value > 100) {\n                  setNode(10);\n                } else if (value < 0) {\n                  setNode(0);\n                } else {\n                  setNode(value);\n                }\n              } else {\n                setNode(0);\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNode(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleActivation = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              setActivation(e.target.value);\n              console.log(activation);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleActivation(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.layer,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \" form-control-label\",\n          htmlFor: \"example-number-input\",\n          children: \"Number of Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          defaultValue: \"0\",\n          id: \"node-input\",\n          type: \"number\",\n          value: node,\n          onChange: handleNode,\n          max: 100,\n          min: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Activation Function\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          name: \"select\",\n          id: \"activationselect\",\n          value: activation,\n          onChange: handleActivation,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Relu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Tanh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Sine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Layer, \"n6clPUkY6lPQ2DpJFYCTdkz+GUo=\");\n\n_c = Layer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layer\");","map":{"version":3,"sources":["/Users/marvinisawesome/Downloads/My Website Project/Postman Hackathon/Frontend/ez-machine-learning/component/layer/layer.js"],"names":["React","useState","styles","FormGroup","Form","Input","Layer","props","node","setNode","activation","setActivation","handleNode","e","preventDefault","value","parseInt","target","handleActivation","console","log","container","layer","key"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport styles from './layer.module.css';\nimport { FormGroup, Form, Input } from 'reactstrap';\n\nexport default function Layer(props) {\n    const [node, setNode] = useState(0);\n    const [activation, setActivation] = useState('relu');\n\n    const handleNode = async (e) => {\n        e.preventDefault(); \n        const value = parseInt(e.target.value);\n        if(value) {\n            if(value> 100) {\n                setNode(10);\n            } else if(value < 0){\n                setNode(0);\n            } else {\n                setNode(value);\n            }\n        } else {\n            setNode(0);\n        }\n\n    }\n\n    const handleActivation = async (e) => {\n        e.preventDefault(); \n        setActivation(e.target.value);\n        console.log(activation)\n    }\n\n    return (\n        <div key={props.key} className={styles.container}>\n\n            <Form className={styles.layer}>\n                <FormGroup>\n                <label className=\" form-control-label\" htmlFor=\"example-number-input\">\n                    Number of Nodes\n                </label>\n                <br />\n                <Input\n                    defaultValue=\"0\"\n                    id=\"node-input\"\n                    type=\"number\"\n                    value={node}\n                    onChange={handleNode}\n                    max={100}\n                    min={0}\n\n                ></Input>\n                </FormGroup>\n                <FormGroup>\n                    <label>Activation Function</label><br/>\n                    <Input type=\"select\" name=\"select\" id=\"activationselect\" value={activation} onChange={handleActivation}>\n                    <option>Relu</option>\n                    <option>Tanh</option>\n                    <option>Sine</option>\n                    </Input>\n                </FormGroup>\n        </Form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}